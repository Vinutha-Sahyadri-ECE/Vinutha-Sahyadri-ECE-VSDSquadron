module uart_tx(
    input clk,
    input rst,
    input transmit,
    input [7:0] data_in,
    output reg tx,
    output reg busy
);
    parameter CLK_FREQ = 50000000; // 50 MHz
    parameter BAUD_RATE = 9600;
    parameter CLKS_PER_BIT = CLK_FREQ / BAUD_RATE;

    reg [15:0] clk_count = 0;
    reg [3:0] bit_index = 0;
    reg [9:0] tx_data = 10'b1111111111;
    reg sending = 0;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            clk_count <= 0;
            bit_index <= 0;
            sending <= 0;
            tx <= 1;
            busy <= 0;
        end else begin
            if (transmit && !sending) begin
                tx_data <= {1'b1, data_in, 1'b0}; // stop + data + start
                sending <= 1;
                busy <= 1;
                clk_count <= 0;
                bit_index <= 0;
            end

            if (sending) begin
                if (clk_count < CLKS_PER_BIT - 1)
                    clk_count <= clk_count + 1;
                else begin
                    clk_count <= 0;
                    tx <= tx_data[bit_index];
                    bit_index <= bit_index + 1;

                    if (bit_index == 9) begin
                        sending <= 0;
                        busy <= 0;
                        tx <= 1;
                    end
                end
            end
        end
    end
endmodule
