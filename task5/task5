uart receiver module
module uart_rx(
    input clk,
    input rst,
    input rx,
    output reg [7:0] data_out,
    output reg data_valid
);
    parameter CLK_FREQ = 50000000;
    parameter BAUD_RATE = 9600;
    parameter CLKS_PER_BIT = CLK_FREQ / BAUD_RATE;

    reg [3:0] bit_index = 0;
    reg [15:0] clk_count = 0;
    reg [7:0] rx_shift = 0;
    reg rx_d1, rx_d2;
    reg receiving = 0;

    always @(posedge clk) begin
        rx_d1 <= rx;
        rx_d2 <= rx_d1;
    end

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            bit_index <= 0;
            clk_count <= 0;
            receiving <= 0;
            data_out <= 8'd0;
            data_valid <= 0;
        end else begin
            data_valid <= 0;
            if (!receiving && !rx_d2) begin
                receiving <= 1;
                clk_count <= CLKS_PER_BIT / 2;
                bit_index <= 0;
            end else if (receiving) begin
                if (clk_count < CLKS_PER_BIT - 1)
                    clk_count <= clk_count + 1;
                else begin
                    clk_count <= 0;
                    if (bit_index < 8) begin
                        rx_shift[bit_index] <= rx_d2;
                        bit_index <= bit_index + 1;
                    end else begin
                        receiving <= 0;
                        data_out <= rx_shift;
                        data_valid <= 1;
                    end
                end
            end
        end
    end
endmodule
